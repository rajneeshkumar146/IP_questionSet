--------------------------------------------------------------------------------
Description
--------------------------------------------------------------------------------
1. You are given an array of positive integers in non-decreasing order. 
2. You have to print the smallest natural number that cannot be represented as 
 sum of any subset in given array.
--------------------------------------------------------------------------------
Source
--------------------------------------------------------------------------------
https://www.geeksforgeeks.org/find-smallest-value-represented-sum-subset-given-
array/
--------------------------------------------------------------------------------
Important Information
--------------------------------------------------------------------------------
1. It is based on one simple fact that since array is sorted, so, we can represent
1 iff arr[0] is less than or eqqual to 1.
2. For any general number res, res can be represented iff arr[i] is less than or 
equal to res.
--------------------------------------------------------------------------------
Code
--------------------------------------------------------------------------------
package Arrays;

import java.util.Scanner;

public class Pep_JavaIP_33SmalestPossiblePositiveNumber {

	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int[] arr = new int[scn.nextInt()];
		for (int i = 0; i < arr.length; i++) {
			arr[i] = scn.nextInt();
		}

		int res = 1;
		for (int i = 0; i < arr.length && arr[i] <= res; i++) {
			res += arr[i];
		}

		System.out.println(res);
	}

}