--------------------------------------------------------------------------------
Description
--------------------------------------------------------------------------------
You are given an array having only 0s and 1s. Sort the array in single pass and
print the sorted array.
--------------------------------------------------------------------------------
Source
--------------------------------------------------------------------------------
https://www.geeksforgeeks.org/segregate-0s-and-1s-in-an-array-by-traversing-array-once/
--------------------------------------------------------------------------------
Important Information
--------------------------------------------------------------------------------
1. Use partition from quick sort strategy.
2. zp sitting behind to collect 0s, and iterator moving sending numbers behind zp
or between zp and itself.
3. 0 to zp is 0s area, zp + 1 to i - 1 is 1s area, i and beyond is unkown
4. problem finishes when i reaches arr.length.
--------------------------------------------------------------------------------
Code
--------------------------------------------------------------------------------
package interview.arrays;

import java.util.Scanner;

public class Pep_JavaIP_1Arrays_23sort01 {

	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int[] arr = new int[scn.nextInt()];
		for (int i = 0; i < arr.length; i++) {
			arr[i] = scn.nextInt();
		}

		solve(arr);
	}

	public static void solve(int[] arr) {
		int zp = -1;

		for (int i = 0; i < arr.length; i++) {
			if (arr[i] == 0) {
				zp++;
				swap(arr, zp, i);
			}
		}

		printarr(arr);
	}

	private static void printarr(int[] arr) {
		for (int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
	}

	public static void swap(int[] arr, int fp, int sp) {
		int temp_var = arr[fp] ^ arr[sp];
		arr[fp] ^= temp_var;
		arr[sp] ^= temp_var;
	}
}
