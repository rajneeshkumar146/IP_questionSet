--------------------------------------------------------------------------------
Description
--------------------------------------------------------------------------------
1. Take as input N, number of elements in array.
2. Take N inputs - Ai - as elements of array A.
3. Take N inputs - Idxi - as elements of array Idx.
4. The Idx array represents that A array contains Idxith element at its ith
position. E.G.
A -> 50 40 70 60 90
Idx -> 3 0 4 1 2
The above data suggests A has its 3th element at 0th index, 0th element at 1 index,
4th element at 2 index, 1th element at 3 index and 2th element at 4th index.
5. Sort A, such that each element occurs where it should i.e. first at first spot,
second at second and so on.
6. Print the sorted array.
--------------------------------------------------------------------------------
Source
--------------------------------------------------------------------------------
https://www.geeksforgeeks.org/reorder-a-array-according-to-given-indexes/
--------------------------------------------------------------------------------
Important Information
--------------------------------------------------------------------------------
1. Look at both arrays together like a map, with keys in Idx and values in A.
2. Problem stops when 0th key-value pair is at 0, 1st key-value pair is at 1
and so on..
3. Check if ith key-value pair is at i, if not swap in both arrays to send it
where it belongs.
4. Continue to do so till point number 2 is satisfied.
--------------------------------------------------------------------------------
Code
--------------------------------------------------------------------------------
package interview.arrays;

import java.util.Scanner;

public class Pep_JavaIP_1Arrays_42ReorderArrayIndexwise {

	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);

		int[] arr = new int[scn.nextInt()];
		for(int i = 0; i < arr.length; i++){
			arr[i] = scn.nextInt();
		}

		int[] idxes = new int[arr.length];
		for(int i = 0; i < idxes.length; i++){
			idxes[i] = scn.nextInt();
		}

		solve(arr, idxes);
	}

	private static void solve(int[] arr, int[] idxes) {
		int i = 0;

		while(i < arr.length){
			if(i != idxes[i]){ // if it is not proper index yet, swap in both arrays
				swap(arr, i, idxes[i]); // this swap should happen first
				swap(idxes, i, idxes[i]);
			} else {
				i++;
			}
		}

		for(int val: arr){
			System.out.print(val + " ");
		}
		System.out.println();
	}

	private static void swap(int[] arr, int i, int j){
		int temp = arr[i] ^ arr[j];
		arr[i] = temp ^ arr[i];
		arr[j] = temp ^ arr[j];
	}
}
