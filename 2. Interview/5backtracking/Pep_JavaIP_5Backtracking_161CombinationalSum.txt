--------------------------------------------------------------------------------
Description
--------------------------------------------------------------------------------
Given an array of positive integers and a target sum to achieve from those
integers. We have to print all those set of integers whose sum becomes equal to
target. An integer can be repeated any number of times. The only constraint is
that if you have chosen an integer, the next choice can be that integer or integers
coming after it in the array.
--------------------------------------------------------------------------------
Source
--------------------------------------------------------------------------------
Adobe, Amazon, Microsoft
https://www.geeksforgeeks.org/combinational-sum/
--------------------------------------------------------------------------------
Important Information
--------------------------------------------------------------------------------
1. CoinChange variation
--------------------------------------------------------------------------------
Code
--------------------------------------------------------------------------------
package Backtracking;

import java.util.Scanner;

public class Pep_JavaIP_5Backtracking_161CombinationalSum {

	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int[] arr = new int[scn.nextInt()];
		for (int i = 0; i < arr.length; i++) {
			arr[i]=scn.nextInt();
		}
		int target=scn.nextInt();
		solve(arr, target,"", 0, 0);
	}

	public static void solve(int[] arr, int target, String ssf, int lindxused) {
		if(target<0) {
			return;
		}
		if(target==0) {
			System.out.println(ssf);
			return;
		}
		
		for(int i=lindxused; i<arr.length; i++) {
			solve(arr,target-arr[i],ssf+""+arr[i]+" ", i);
		}
	}
}

