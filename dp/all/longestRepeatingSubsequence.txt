import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    public static void main (String[] args) {
   	 //code
   	 Scanner sc=new Scanner(System.in);
   	 int T=sc.nextInt();
   	 while(T>0){
   	 	T--;
   	 	int N=sc.nextInt();
   	 	String s=sc.next();
   	 	System.out.println(longestRepeatingSub(s));
   	 }
    
    //Slight modification of LCS
    //Will find the comm subseq of the given str with itself
    //A particular character cant be inserted in both the sequences at same index
    public static int longestRepeatingSub(String s){
    	int[][] dp=new int[s.length()][s.length()];
    	for(int i=0;i<dp.length;i++){
        	for(int j=0;j<dp[0].length;j++){
           	 
            	if(i!=j && s.charAt(i)==s.charAt(j)){
                	dp[i][j]= (i-1>=0 && j-1>=0?dp[i-1][j-1]:0) + 1;
            	}
            	else{
                	dp[i][j]=Math.max(i-1>=0?dp[i-1][j]:0, j-1>=0?dp[i][j-1]:0);
            	}
        	}
    	}
    	return dp[dp.length-1][dp[0].length-1];
    
}
