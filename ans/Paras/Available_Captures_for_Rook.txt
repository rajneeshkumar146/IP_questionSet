class Solution {
    public int numRookCaptures(char[][] board) {
 
        for(int i=0;i<board.length;i++)
        {
            for(int j=0;j<board[0].length;j++)
            {
                if(board[i][j]=='R')
                {
                    return checkpawns(board,i,j);
                }
            }
        }
        
        return 0;
    }
    
   int checkpawns(char[][]board,int row,int col)
    {
       int ans=0;
       int count=0;
        for(int i=col;i<board[0].length;i++){
            if(board[row][i]=='B')
            {
                count=0;
                break;
            }
            else if(board[row][i]=='p')
            {
                count=1;
                break;
            }
        }
        ans+=count;
        count=0;
        
        for(int i=col;i>=0;i--){
            if(board[row][i]=='B')
            {
                count=0;
                break;
            }
            else if(board[row][i]=='p')
            {
                count=1;
                break;
            }
        }
        
        ans+=count;
        count=0;
        for(int i=row;i<board.length;i++){
            if(board[i][col]=='B')
            {
                count=0;
                break;
            }
            else if(board[i][col]=='p')
            {
                count=1;
                break;
            }
        }
        
        ans=ans+count;
        count=0;
        
        for(int i=row;i>=0;i--){
            if(board[i][col]=='B')
            {
                count=0;
                break;
            }
            else if(board[i][col]=='p')
            {
                count=1;
                break;
            }
        }
        ans+=count;
        count=0;
    return ans;
    }   
        
}