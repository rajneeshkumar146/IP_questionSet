TimeComplexity-O(n^2)
SpaceComplexity=O(1)

class Solution {
    public int threeSumClosest(int[] nums, int target) {
       
        
        int n=nums.length;
        Arrays.sort(nums);
        int closest=Integer.MAX_VALUE; 
        int sum=0;
        
        for(int i=0;i<n;i++)
        {
            int c=-(nums[i])+target;
            
            if(i>0 && nums[i-1]==nums[i])
            {
                continue;
            }
    
            int j=i+1;
            int k=n-1;
            while(j<k)
            {
                int val=nums[j]+nums[k];            
                
                if(val==c){
                   return target;
                }
                else{
                    
                    int difference=Math.abs(val+nums[i]-target);
                    if(difference<closest)
                    {
                        closest=difference;
                             sum=val+nums[i];
                    }          
                    if(val>c){   
                            k--;
                    }
                    else{ 
                         j++;
                    }           
                }
            }
        }   
        return sum;
    }
}