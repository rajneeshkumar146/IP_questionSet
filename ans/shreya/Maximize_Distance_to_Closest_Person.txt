class Solution {
    public int maxDistToClosest(int[] seats) {
      int []leftclose=new int[seats.length];
        int []rightclose=new int[seats.length];
        
        for(int i=0;i<seats.length;i++)
        {
            if(seats[i]==0)
            {
                if(i==0)
                {
                    leftclose[i]=-seats.length;
                }else{
                    if(seats[i-1]==0)
                        leftclose[i]=leftclose[i-1];
                else
                    leftclose[i]=i-1;
            }
            }
            else{
                leftclose[i]=0;
            }
        }
        
        
        
        for(int i=seats.length-1;i>=0;i--)
        {
            if(seats[i]==0)
            {
                if(i==seats.length-1)
                {
                    rightclose[i]=2*seats.length;
                }else{
                    if(seats[i+1]==0)
                        rightclose[i]=rightclose[i+1];
                else
                    rightclose[i]=i+1;
                }
            }else{
                rightclose[i]=0;
            }
        }
        int pos=-1;
        int max=1;
        int i=0;
        int n=seats.length;
        while(i<n)
        {
            if(seats[i]==0){
            
                int min=Math.min(i-leftclose[i],rightclose[i]-i);
            
                if(min>=max)
                {
                    max=min;
                    pos=i;
                }
            }
            i++;
        }
        
        return max;
    }
}