class Solution {
    public int expressiveWords(String S, String[] words) {
        int count=0;
        for(int i=0;i<words.length;i++)
        {
           count=count+recursiveSol(S,words[i],'\0',0);
        }
        
        return count;
    }
    
    int recursiveSol(String s,String p, char lastchar,int lastcount)
    {
       
		if (s.length() == 0 || p.length() == 0) {
			if (s.length() == 0 && p.length() == 0) {
				return 1;
			} else if (s.length() == 0) {
				return 0;
			} else {
				int count = lastcount;
				for (int i = 0; i < s.length(); i++) {
					if (s.charAt(i) == lastchar) {
						count++;
					} else
						break;
				}
				if (count >= 3)
					return 1;
				return 0;
			}

		}

		if (s.charAt(0) == p.charAt(0)) {
			if(s.charAt(0)!=lastchar &&lastchar!='\0')
				lastcount=0;
			return recursiveSol(s.substring(1), p.substring(1), p.charAt(0),lastcount+1);
		}

		if (s.charAt(0) != lastchar) {
			return 0;
		} else {
			int count = lastcount;
			int i = 0;
			while (i < s.length()) {
				if (s.charAt(i) == lastchar) {
					count++;
				} else {
					break;
				}
				i++;
			}

			if (count < 3) {
				return 0;
			}
			
			s=s.substring(i);
		}

		return recursiveSol(s, p, p.charAt(0),0);

    }
}